<?php

/**
 * @file
 * A field with associated data to collect gender information from users.
 */

use Drupal\Core\Entity\EntityFormInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\field\FieldConfigInterface;
use Symfony\Component\Routing\Exception\RouteNotFoundException;

/**
 * Implements hook_help().
 */
function gender_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.gender':
      $output = '';
      $output .= '<p>' . t('The gender field module provides inclusive options for collecting gender information of individuals.') . '</p>';
      $output .= t("<blockquote><p>This is not an area that we often have to give thought to, but it is also not complicated if we approach the user experience with empathy and consideration for the sensitive situations we may put our users in.</p></blockquote><cite>&#151;Zoe Gagnon</cite>");
      $output .= '<h2 id="1">' . t('Do you need this module?') . '</h2>';
      $output .= '<p><strong>' . t('Before using this module on your site, consider whether you need to collect gender information at all.') . '</strong></p>';
      $output .= '<h3 id="1.1">' . t('Some questions to ask yourself') . '</h3>';
      $output .= '<ol>';
      $output .= '<li>' . t('<em>Do you need to address a person with pronouns?</em> Genders do not necessarily map easily onto the pronouns a person uses. If you need to associate pronouns with a person, ask for those pronouns directly.') . '</li>';
      $output .= '<li>' . t("<em>Do you need to address a person with a title or prefix (such as Mr./Ms./Mx.)?</em> Genders also do not necessarily correspond to a person's preferred title, and moreover would leave out honorifics related to profession, such as Dr., Rev., or Capt. If you need to associate titles with a person, ask for those titles directly.") . '</li>';
      $output .= '<li>' . t("<em>Do you need to collect gender information for demographic data reasons?</em> If you do, make sure you are able to accurately record a person's gender, rather than forcing them into choosing from limited options. If you need to use the data for recording trends, writing reports, or segmentation for advertising or other reasons, consider post-processing the data to group related genders depending on your specific use-case.") . '</li>';
      $output .= '<li>' . t("<em>Do you need to know a person's health needs, clothing preferences or bathroom use?</em> If you are organizing an event, for instance, you might want to know what sort of facilities to provide or what sorts of t-shirts to order. Genders, however, do not necessarily correspond to specific body types, body functions, health requirements (such as menstrual supplies) or reflect what types of facilities a person would feel safest using in a public environment. If you are collecting gender data for this purpose, ask the more precise questions specifically.") . '</li>';
      $output .= '<li>' . t("<em>Do you want to publicly display a person's gender on a profile?</em> This is often a choice made by social media and dating/relationship sites. If you do this, consider making the field optional altogether. If you are providing user avatars, remember that human bodies come in all sorts, and allow individuals to choose an avatar separately from collecting this data.") . '</li>';
      $output .= '<li>' . t("<em>Do you need to know assigned gender for legal, medical or regulatory reasons?</em> Current gender does not necessarily correspond to assigned sex at birth or legal gender marker, so be sure you are clear in what you are requesting of a person. It's particularly critical to be transparent about your privacy policy and the how this data will be used.") . '</li>';
      $output .= '</ol>';
      $output .= '<p>' . t('The overarching goal should be to <strong>only collect the data you actually need</strong> and <strong>provide individuals justification for what you are asking.</strong>') . '</p>';
      $output .= '<h3 id="1.2">' . t('A note on the use of "transgender"') . '</h3>';
      $output .= '<p>' . t('"Transgender" and "trans*" are contested terms across nationalities, ethnicities, and generations. "Transgender" is often used as an umbrella term that refers to people whose gender identity, expression or behavior is different from those typically associated with their assigned sex at birth. Other identities considered to fall under this umbrella can include non-binary, gender fluid, gender non-conforming and genderqueer &#151; as well as many more.') . '</p>';
      $output .= '<p>' . t("Transgender <em>may or may not</em> be a part of a person's identity <em>in addition to</em> their gender. The use of gender fields that provide the limited options \"Male\", \"Female\", \"Transgender\" is insufficent to reflect all individuals' identities, because some individuals will identify as more than one of these.") . '</p>';
      $output .= '<p>' . t('Additionally, providing options like trans man" or "trans woman" in opposition to "man" or "woman" is not an inclusive practice. Trans men are men, and deserve the opportunity to select man, and trans women are women, and deserve the opportunity to select woman.') . '</p>';
      $output .= '<p>' . t('While the gender field module is designed to expand the scope of gender identities being collected, be sure not to configure these fields in such a way as to force a person to choose "transgender" <em>or</em> another gender.') . '</p>';
      $output .= '<h2 id="2">' . t('Configuring fields created with this module') . '</h2>';
      $output .= '<h3 id="2.1">' . t('Optional and required fields') . '</h3>';
      $output .= '<p>' . '<em>' . t('The safest and most inclusive option for collecting gender data is to make the field optional.') . '</em>' . '</p>';
      $output .= '<p>' . t("There is always a possibility that even a thoughtfully-considered field will still not be able to capture a person's identity. If collecting this information is not critical to the functionality of your site, consider making the field(s) you create not required in order to submit the form.") . '</p>';
      $output .= '<p>' . t("If the field(s) you create are optional, ensure you've considered how to handle empty responses. If you choose to provide a default value when a person has not given a response (for instance, a default pronoun, or a default title) make this clear in the context of the form so a person is absolutely clear on the implications and consequences of omitting a response to your field.") . '</p>';
      $output .= '<h3 id="2.2">' . t('Ensuring personal privacy when collecting gender data') . '</h3>';
      $output .= '<p>' . t('Gender data should be considered sensitive, privileged user data. Be clear about how and when this information will be used, and who will have access to viewing it &#151; in particular if it will be publicly visible on your site &#151; <em>on the form where you ask for this data.</em>') . '</p>';
      $output .= '<p>' . t('For example, if you have separate fields for pronouns, titles and genders, you might specify that pronouns will be listed on a person\'s public profile and in the user interface (such as "...has updated her profile"), titles will be used in emails addressed to the person and visible to site administrators, and gender will be anonymized and used in reports about whom is using your site.') . '</p>';
      $output .= '<p>' . t('Remember that the gender field is only a regular field in Drupal, stored in plain text in a database. If you have requirements such as <abbr title="The Health Insurance Portability and Accountability Act, in the U.S.">HIPAA</abbr> or are collecting particularly sensitive information such as assigned sex at birth, you may want to consider using a separate encrypted field, or storing the data in an encrypted <abbr title="Constituent/customer relationship management">CRM</abbr> system.') . '</p>';
      $output .= '<p>' . t("Understand the risks that transgender and non-binary people face when <dfn title='Having a gender identity which matches the sex one was assigned at birth'>cisgender</dfn> people learn of their identity. Transgender individuals experience <a href='https://transequality.org/issues/resources/national-transgender-discrimination-survey-full-report'>very high rates of violence and discrimination</a>. Don't risk the safety and sanity of the people with whom you're engaging by not considering their privacy needs.") . '</p>';
      $output .= '<h2 id="3">' . t('Resources') . '</h2>';
      $output .= '<h3 id="3.1">' . t('Articles, reports and books') . '</h3>';
      $output .= '<ul>';
      $output .= '<li>' . t('<a href="https://43epnd.axshare.com/gender.html">#genderUX</a>, Kylie Jack') . '</li>';
      $output .= '<li>' . t('<a href="http://geekfeminism.wikia.com/wiki/Collecting_gender_information">Collecting gender information</a>, Geek Feminism Wiki') . '</li>';
      $output .= '<li>' . t('<a href="https://uxdesign.cc/designing-forms-for-gender-diversity-and-inclusion-d8194cf1f51">Designing forms for gender diversity and inclusion</a>, Sabrina Fonseca, UX Collective') . '</li>';
      $output .= '<li>' . t('<a href="http://www.totb.org.uk/forms/">Forms and non-binary gendered people</a>, Think Outside The Box') . '</li>';
      $output .= '<li>' . t('<a href="https://modelviewculture.com/pieces/the-argument-for-free-form-input">The Argument for Free-Form Input</a>, Emily Horsman, Model View Culture') . '</li>';
      $output .= '<li>' . t('<a href="https://builttoadapt.io/asking-for-gender-in-applications-687a3ba2cea8">Asking for Gender in Applications</a>, Zoe Gagnon, Built to Adapt') . '</li>';
      $output .= '<li>' . t('<a href="http://juliepagano.com/blog/2015/06/12/on-forms-and-personal-information/">On Forms and Personal Information</a>, Julie Pagano') . '</li>';
      $output .= '<li>' . t('<a href="http://12devsofxmas.co.uk/2015/12/day-4-gender-representation-on-the-web-and-in-forms/">Gender representation on the web and in forms</a>, Claire Gowler, 12 Devs of Xmas') . '</li>';
      $output .= '<li>' . t('<a href="http://www.practicemakesprogress.org/blog/2015/9/18/asking-about-gender-on-online-forms">Asking about gender on online forms</a>, Practice Makes Progress') . '</li>';
      $output .= '<li>' . t('<a href="https://www.hrc.org/resources/collecting-transgender-inclusive-gender-data-in-workplace-and-other-surveys">Collecting Transgender-Inclusive Gender Data in Workplace and Other Surveys</a>, Human Rights Campaign') . '</li>';
      $output .= '<li>' . t('<a href="http://www.sarawb.com/technically-wrong/">Technically Wrong: Sexist Apps, Biased Algorithms, and Other Threats of Toxic Tech</a> (especially chapter 4, "Select One"), Sara Wachter-Boettcher') . '</li>';
      $output .= '</ul>';
      $output .= '<h3 id="3.2">' . t('Videos') . '</h3>';
      $output .= '<ul>';
      $output .= '<li>' . t('<a href="https://www.alterconf.com/talks/5-simple-steps-trans-inclusive-data">5 Simple Steps for Trans-Inclusive Data</a>, Avory Faucette, AlterConf') . '</li>';
      $output .= '<li>' . t('<a href="http://confreaks.tv/videos/osfeels2016-web-forms-when-someone-s-gender-is-your-business">Web Forms: When Someone\'s Gender is Your Business</a>, Jennifer Tu, Open Source &amp; Feelings') . '</li>';
      $output .= '<li>' . t('<a href="https://vimeo.com/80375707">Schemas for the Real World</a>, Carina C. Zona') . '</li>';
      $output .= '</ul>';
      $output .= '<h3 id="3.3">' . t('Tools') . '</h3>';
      $output .= '<ul>';
      $output .= '<li>' . t('<a href="https://github.com/anne-decusatis/genderamender">genderamender</a>, Anne DeCusatis') . '</li>';
      $output .= '<li>' . t('<a href="http://www.opengenderproject.com/">The Open Gender Project</a>, M14 Industries') . '</li>';
      $output .= '<li>' . t('<a href="https://github.com/drnikki/open-demographics">Open Demographics Initiative</a>, Nikki Stevens') . '</li>';
      $output .= '</ul>';
      $output .= '<h3 id="3.4">' . t('References') . '</h3>';
      $output .= '<ul>';
      $output .= '<li>' . t('<a href="https://github.com/mozilla/diversity/blob/master/data-metrics/surveys/en/gender-identity.md">Gender Identity</a> and <a href="https://github.com/mozilla/diversity/blob/master/data-metrics/surveys/en/gender-pronouns.md">Gender Pronouns</a>, Mozilla Diversity &amp; Inclusion') . '</li>';
      $output .= '<li>' . t('<a href="http://williamsinstitute.law.ucla.edu/wp-content/uploads/geniuss-report-sep-2014.pdf">Best Practices for Asking Questions to Identify Transgender and Other Gender Minority Respondents on Population-Based Surveys (PDF)</a> (not fully inclusive), GenIUSS Group, The Williams Institute, UCLA School of Law') . '</li>';
      $output .= '<li>' . t('<a href="https://www.iso.org/standard/36266.html">ISO/IEC 5218:2004 - Codes for the representation of human sexes</a> (not inclusive), International Organization for Standardization') . '</li>';
      $output .= '</ul>';

      return $output;

    default:
      return '';
  }
}

/**
 * Implements hook_field_formatter_info_alter().
 */
function gender_field_formatter_info_alter(array &$info) {
  $info['list_default']['field_types'][] = 'gender';
}

/**
 * Get the list of gender options.
 *
 * @return array
 *   An associative array of gender options, with text keys and translatable
 *   labels, suitable for use as options in a select element.
 */
function gender_options() {
  return [
    'woman' => t('Woman'),
    'demi-girl' => t('Demi-girl'),
    'man' => t('Man'),
    'demi-boy' => t('Demi-boy'),
    'non-binary' => t('Non-binary'),
    'demi-non-binary' => t('Demi-non-binary'),
    'genderqueer' => t('Genderqueer'),
    'genderflux' => t('Genderflux'),
    'genderfluid' => t('Genderfluid'),
    'demi-fluid' => t('Demi-fluid'),
    'demi-gender' => t('Demi-gender'),
    'bigender' => t('Bigender'),
    'trigender' => t('Trigender'),
    'two-spirit' => t('Two Spirit'),
    'multigender/polygender' => t('Multigender/polygender'),
    'pangender/omnigender' => t('Pangender/omnigender'),
    'maxigender' => t('Maxigender'),
    'aporagender' => t('Aporagender'),
    'intergender' => t('Intergender'),
    'maverique' => t('Maverique'),
    'gender-confusion/gender-f*ck' => t('Gender confusion/Gender f*ck'),
    'gender-indifferent' => t('Gender indifferent'),
    'graygender' => t('Graygender'),
    'agender/genderless' => t('Agender/genderless'),
    'demi-agender' => t('Demi-agender'),
    'genderless' => t('Genderless'),
    'gender-neutral' => t('Gender neutral'),
    'neutrois' => t('Neutrois'),
    'androgynous' => t('Androgynous'),
    'androgyne' => t('Androgyne'),
    'prefer-not-to-answer' => t('Prefer not to answer'),
    // @todo Add "other" field that allows the user to enter their own value.
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gender_form_field_config_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Get the form builder object.
  $form_builder = $form_state->getFormObject();
  // If the form builder object could not be loaded, or if it is not an instance
  // of EntityFormInterface, stop here.
  if (empty($form_builder) || !$form_builder instanceof EntityFormInterface) {
    return;
  }
  // Get the entity object.
  $entity = $form_builder->getEntity();
  // If the entity is not present, or if it is not an instance of
  // FieldConfigInterface, stop here.
  if (empty($entity) || !$entity instanceof FieldConfigInterface) {
    return;
  }
  // Get the field type from the entity.
  $field_type = $entity->getFieldStorageDefinition()->getType();
  // Only modify the form if this is a gender field.
  if ($field_type == 'gender') {
    // The users should know why they are being asked for this information, so
    // make the field required.
    $form['description']['#required'] = TRUE;
    // Re-label the field to make it more obvious what it's for in this case.
    $form['description']['#title'] = t('Justification for asking for this information');
    // Prepend a new line to the original description.
    $additional_text = t('This data should only be collected when needed, and you should provide justification to your users for why you are asking for it.') . ' ';
    try {
      $additional_text .= t('For further information, consult the <a href="@help-url">help page</a>.', [
        '@help-url' => Url::fromRoute('help.page', ['name' => 'gender'])->toString(),
      ]);
    }
    // This exception will be thrown if the Help module is not enabled.
    catch (RouteNotFoundException $exception) {
      $additional_text .= t('For further information, <a href="@install-url">install the Help module.</a>', [
        '@install-url' => Url::fromRoute('system.modules_list', [], ['fragment' => 'module-help'])->toString(),
      ]);
    }
    // Wrap the extra text in <strong> tags to make it stand out more.
    $additional_text = '<strong>' . $additional_text . '</strong>';
    // Only concatenate the original form description if it had something in it,
    // otherwise, just use the new text.
    if (!empty($form['description'])) {
      $form['description']['#description'] = $additional_text . '<br>' . $form['description']['#description'];
    }
    else {
      $form['description']['#description'] = $additional_text;
    }
  }
}

/**
 * Implements hook_modules_installed().
 */
function gender_modules_installed($modules) {
  if (in_array('help', $modules)) {
    $messenger = \Drupal::messenger();
    $messenger->addMessage(
      t(
        'Please read the <a href="@url">help page</a> for the Gender module.',
        ['@url' => \Drupal::url('help.page', ['name' => 'gender'])]
      )
    );
  }
}
